apiVersion: apps/v1
kind: Deployment
metadata:
  name: genai-mlops
  labels:
    app: genai-mlops
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: genai-mlops
  template:
    metadata:
      labels:
        app: genai-mlops
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: genai-mlops-sa
      containers:
      - name: genai-mlops
        image: gcr.io/PROJECT_ID/genai-mlops:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: MODEL_PATH
          value: "/models"
        - name: MLFLOW_TRACKING_URI
          valueFrom:
            configMapKeyRef:
              name: mlflow-config
              key: tracking_uri
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: api-secrets
              key: secret-key
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/google/key.json"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
            nvidia.com/gpu: "0"
          limits:
            memory: "4Gi"
            cpu: "2"
            nvidia.com/gpu: "1"
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: model-storage
          mountPath: /models
        - name: config-volume
          mountPath: /app/configs
        - name: google-cloud-key
          mountPath: /var/secrets/google
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: model-storage-pvc
      - name: config-volume
        configMap:
          name: app-config
      - name: google-cloud-key
        secret:
          secretName: google-cloud-key
---
apiVersion: v1
kind: Service
metadata:
  name: genai-mlops
  labels:
    app: genai-mlops
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: genai-mlops
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: genai-mlops
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: genai-mlops
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: genai-mlops
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "genai-mlops-ip"
    networking.gke.io/managed-certificates: "genai-mlops-cert"
    networking.gke.io/v1beta1.FrontendConfig: "genai-mlops-frontend-config"
spec:
  rules:
  - host: api.genai-mlops.com
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: genai-mlops
            port:
              number: 80
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: genai-mlops-frontend-config
spec:
  redirectToHttps:
    enabled: true
    responseCodeName: MOVED_PERMANENTLY_DEFAULT
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: genai-mlops-cert
spec:
  domains:
    - api.genai-mlops.com 