name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov black flake8 mypy
    
    - name: Run code quality checks
      run: |
        black --check src tests
        flake8 src tests
        mypy src tests
    
    - name: Run tests with coverage
      run: |
        pytest tests/ --cov=src --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

  security:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Security scan with Bandit
      run: |
        pip install bandit
        bandit -r src/ -f json -o bandit-results.json
    
    - name: Run dependency security check
      run: |
        pip install safety
        safety check

  build:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    
    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker gcr.io
    
    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/genai-mlops:${{ github.sha }} .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/genai-mlops:${{ github.sha }}
        docker tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/genai-mlops:${{ github.sha }} gcr.io/${{ secrets.GCP_PROJECT_ID }}/genai-mlops:latest
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/genai-mlops:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    
    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials genai-mlops-cluster --region ${{ secrets.GCP_REGION }}
    
    - name: Deploy to GKE
      run: |
        kubectl apply -f infrastructure/kubernetes/
        kubectl set image deployment/genai-mlops genai-mlops=gcr.io/${{ secrets.GCP_PROJECT_ID }}/genai-mlops:${{ github.sha }}
    
    - name: Verify deployment
      run: |
        kubectl rollout status deployment/genai-mlops
    
    - name: Run smoke tests
      run: |
        # Add post-deployment smoke tests here
        echo "Running smoke tests..."
    
    - name: Notify deployment status
      if: always()
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 